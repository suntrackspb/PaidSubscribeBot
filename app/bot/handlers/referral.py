"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –¥–ª—è PaidSubscribeBot.
–í–∫–ª—é—á–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫, –ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª–∞–º–∏.
"""

from typing import Optional
from decimal import Decimal

from aiogram import Router, F
from aiogram.types import CallbackQuery, Message, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

from app.bot.utils.texts import Messages
from app.services.referral_service import ReferralService
from app.services.user_service import UserService
from app.utils.logger import get_logger
from app.config.settings import get_settings

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
referral_router = Router()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å—ã
referral_service = ReferralService()
user_service = UserService()

logger = get_logger("handlers.referral")
settings = get_settings()


def create_referral_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="referral_stats"),
            InlineKeyboardButton(text="üë• –ú–æ–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã", callback_data="referral_list")
        ],
        [
            InlineKeyboardButton(text="üîó –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É", callback_data="referral_link"),
            InlineKeyboardButton(text="‚ÑπÔ∏è –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç", callback_data="referral_info")
        ],
        [
            InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="main_menu")
        ]
    ])
    return keyboard


def create_referral_link_keyboard(referral_link: str) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É", url=referral_link)
        ],
        [
            InlineKeyboardButton(text="üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è", switch_inline_query=f"–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –±–æ—Ç—É –ø–æ –º–æ–µ–π —Å—Å—ã–ª–∫–µ: {referral_link}")
        ],
        [
            InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="referral_menu")
        ]
    ])
    return keyboard


@referral_router.message(Command("referral"))
async def cmd_referral_menu(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ –≤—Ö–æ–¥–∞ –≤ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–µ –º–µ–Ω—é"""
    user_id = message.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    stats = await referral_service.get_referral_stats(user_id)
    
    text = f"""
üéØ <b>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</b>

üí∞ <b>–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
üë• –í—Å–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {stats['total_referrals']}
‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö: {stats['confirmed_referrals']}
‚è≥ –û–∂–∏–¥–∞—é—Ç: {stats['pending_referrals']}

üíµ <b>–í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è:</b>
üí∞ –í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: {stats['total_rewards']} ‚ÇΩ
‚úÖ –í—ã–ø–ª–∞—á–µ–Ω–æ: {stats['paid_rewards']} ‚ÇΩ
‚è≥ –ö –≤—ã–ø–ª–∞—Ç–µ: {stats['pending_rewards']} ‚ÇΩ

–ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è –∑–∞ –∫–∞–∂–¥—É—é –∏—Ö –ø–æ–¥–ø–∏—Å–∫—É!
"""
    
    await message.answer(
        text,
        reply_markup=create_referral_keyboard(),
        parse_mode="HTML"
    )


@referral_router.callback_query(F.data == "referral_menu")
async def cb_referral_menu(callback: CallbackQuery):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–º—É –º–µ–Ω—é"""
    user_id = callback.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    stats = await referral_service.get_referral_stats(user_id)
    
    text = f"""
üéØ <b>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</b>

üí∞ <b>–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
üë• –í—Å–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {stats['total_referrals']}
‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö: {stats['confirmed_referrals']}
‚è≥ –û–∂–∏–¥–∞—é—Ç: {stats['pending_referrals']}

üíµ <b>–í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è:</b>
üí∞ –í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: {stats['total_rewards']} ‚ÇΩ
‚úÖ –í—ã–ø–ª–∞—á–µ–Ω–æ: {stats['paid_rewards']} ‚ÇΩ
‚è≥ –ö –≤—ã–ø–ª–∞—Ç–µ: {stats['pending_rewards']} ‚ÇΩ

–ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è –∑–∞ –∫–∞–∂–¥—É—é –∏—Ö –ø–æ–¥–ø–∏—Å–∫—É!
"""
    
    await callback.message.edit_text(
        text,
        reply_markup=create_referral_keyboard(),
        parse_mode="HTML"
    )
    await callback.answer()


@referral_router.callback_query(F.data == "referral_link")
async def cb_referral_link(callback: CallbackQuery):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏"""
    user_id = callback.from_user.id
    
    try:
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥
        referral_code = referral_service.generate_referral_code()
        
        # –°–æ–∑–¥–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
        bot_username = settings.BOT_USERNAME or "your_bot"
        referral_link = f"https://t.me/{bot_username}?start=ref_{referral_code}"
        
        text = f"""
üîó <b>–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞</b>

<code>{referral_link}</code>

üìã –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –¥—Ä—É–∑—å—è–º!

üí° <b>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</b>
1. –î—Ä—É–≥ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ
2. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è –≤ –±–æ—Ç–µ
3. –û–ø–ª–∞—á–∏–≤–∞–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É
4. –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ!

üí∞ <b>–†–∞–∑–º–µ—Ä –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è:</b> 100 ‚ÇΩ –∑–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞
"""
        
        await callback.message.edit_text(
            text,
            reply_markup=create_referral_link_keyboard(referral_link),
            parse_mode="HTML"
        )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏", show_alert=True)
    
    await callback.answer()


@referral_router.callback_query(F.data == "referral_stats")
async def cb_referral_stats(callback: CallbackQuery):
    """–ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤"""
    user_id = callback.from_user.id
    
    try:
        stats = await referral_service.get_referral_stats(user_id)
        
        text = f"""
üìä <b>–ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>

üë• <b>–†–µ—Ñ–µ—Ä–∞–ª—ã:</b>
‚Ä¢ –í—Å–µ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–æ: {stats['total_referrals']}
‚Ä¢ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö: {stats['confirmed_referrals']}
‚Ä¢ –û–∂–∏–¥–∞—é—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {stats['pending_referrals']}

üí∞ <b>–í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è:</b>
‚Ä¢ –í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: {stats['total_rewards']} ‚ÇΩ
‚Ä¢ –í—ã–ø–ª–∞—á–µ–Ω–æ: {stats['paid_rewards']} ‚ÇΩ
‚Ä¢ –ö –≤—ã–ø–ª–∞—Ç–µ: {stats['pending_rewards']} ‚ÇΩ

üìà <b>–ö–æ–Ω–≤–µ—Ä—Å–∏—è:</b>
"""
        
        if stats['total_referrals'] > 0:
            conversion_rate = (stats['confirmed_referrals'] / stats['total_referrals']) * 100
            text += f"‚Ä¢ {conversion_rate:.1f}% —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –æ–ø–ª–∞—Ç–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É"
        else:
            text += "‚Ä¢ –ü–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞"
        
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="referral_stats")],
            [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="referral_menu")]
        ])
        
        await callback.message.edit_text(
            text,
            reply_markup=keyboard,
            parse_mode="HTML"
        )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏", show_alert=True)
    
    await callback.answer()


@referral_router.callback_query(F.data == "referral_list")
async def cb_referral_list(callback: CallbackQuery):
    """–°–ø–∏—Å–æ–∫ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_id = callback.from_user.id
    
    try:
        referrals = await referral_service.get_referrals_by_referrer(user_id, limit=10)
        
        text = "üë• <b>–í–∞—à–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã</b>\n\n"
        
        if referrals:
            for i, referral in enumerate(referrals, 1):
                status_emoji = {
                    "pending": "‚è≥",
                    "confirmed": "‚úÖ",
                    "rewarded": "üí∞"
                }.get(referral.status, "‚ùì")
                
                referred_user = referral.referred
                user_name = referred_user.full_name if referred_user else f"ID: {referral.referred_id}"
                
                text += f"{i}. {status_emoji} {user_name}\n"
                text += f"   –°—Ç–∞—Ç—É—Å: {referral.status}\n"
                
                if referral.reward_amount:
                    text += f"   –í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ: {referral.reward_amount} ‚ÇΩ\n"
                
                text += f"   –î–∞—Ç–∞: {referral.created_at.strftime('%d.%m.%Y')}\n\n"
        else:
            text += "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤.\n\n"
            text += "üí° –ü–æ–ª—É—á–∏—Ç–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –∏ –Ω–∞—á–Ω–∏—Ç–µ –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å –¥—Ä—É–∑–µ–π!"
        
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="referral_list")],
            [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="referral_menu")]
        ])
        
        await callback.message.edit_text(
            text,
            reply_markup=keyboard,
            parse_mode="HTML"
        )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞", show_alert=True)
    
    await callback.answer()


@referral_router.callback_query(F.data == "referral_info")
async def cb_referral_info(callback: CallbackQuery):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ"""
    text = """
‚ÑπÔ∏è <b>–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</b>

üéØ <b>–ß—Ç–æ –Ω—É–∂–Ω–æ –¥–µ–ª–∞—Ç—å:</b>
1. –ü–æ–ª—É—á–∏—Ç–µ —Å–≤–æ—é —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
2. –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –µ–π —Å –¥—Ä—É–∑—å—è–º–∏
3. –ö–æ–≥–¥–∞ –¥—Ä—É–≥ –æ–ø–ª–∞—Ç–∏—Ç –ø–æ–¥–ø–∏—Å–∫—É - –ø–æ–ª—É—á–∏—Ç–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ!

üí∞ <b>–†–∞–∑–º–µ—Ä –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–π:</b>
‚Ä¢ 100 ‚ÇΩ –∑–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞, –æ–ø–ª–∞—Ç–∏–≤—à–µ–≥–æ –ø–æ–¥–ø–∏—Å–∫—É
‚Ä¢ –í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
‚Ä¢ –í—ã–ø–ª–∞—Ç—ã –ø—Ä–æ–∏–∑–≤–æ–¥—è—Ç—Å—è –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ

üìã <b>–£—Å–ª–æ–≤–∏—è:</b>
‚Ä¢ –î—Ä—É–≥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–æ–≤—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
‚Ä¢ –û–Ω –¥–æ–ª–∂–µ–Ω –æ–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –¥–Ω–µ–π
‚Ä¢ –ú–∞–∫—Å–∏–º—É–º 100 —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –æ—Ç –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

üöÄ <b>–°–æ–≤–µ—Ç—ã –¥–ª—è —É—Å–ø–µ—Ö–∞:</b>
‚Ä¢ –†–∞—Å—Å–∫–∞–∑—ã–≤–∞–π—Ç–µ –æ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞—Ö –∫–∞–Ω–∞–ª–∞
‚Ä¢ –î–µ–ª–∏—Ç–µ—Å—å —Å—Å—ã–ª–∫–æ–π –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö
‚Ä¢ –ü–æ–º–æ–≥–∞–π—Ç–µ –¥—Ä—É–∑—å—è–º —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π

üí° –ß–µ–º –±–æ–ª—å—à–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥—Ä—É–∑–µ–π –≤—ã –ø—Ä–∏–≤–µ–¥–µ—Ç–µ, —Ç–µ–º –±–æ–ª—å—à–µ –∑–∞—Ä–∞–±–æ—Ç–∞–µ—Ç–µ!
"""
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîó –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É", callback_data="referral_link")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="referral_menu")]
    ])
    
    await callback.message.edit_text(
        text,
        reply_markup=keyboard,
        parse_mode="HTML"
    )
    await callback.answer()


async def process_referral_start(user_id: int, referral_code: str) -> bool:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞"""
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–¥ –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ start
        if referral_code.startswith("ref_"):
            code = referral_code[4:]  # –£–±–∏—Ä–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å "ref_"
            
            # –ò—â–µ–º —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ –ø–æ –∫–æ–¥—É (–≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –∫–æ–¥ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏)
            # –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å –ø–æ –ø–æ—Å–ª–µ–¥–Ω–∏–º —Ä–µ—Ñ–µ—Ä–∞–ª–∞–º
            # –í —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ –Ω—É–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–æ–¥ -> —Ä–µ—Ñ–µ—Ä–µ—Ä
            
            # –ü–æ–∫–∞ —á—Ç–æ –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
            logger.info(f"–ü–æ–ª—É—á–µ–Ω —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥: {code} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            
            # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ–∏—Å–∫ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ –ø–æ –∫–æ–¥—É –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Å–≤—è–∑–∏
            return True
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞: {e}")
        return False
    
    return False


async def confirm_referral_on_payment(user_id: int, payment_amount: Decimal) -> bool:
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ"""
    try:
        referral = await referral_service.confirm_referral(user_id, payment_amount)
        if referral:
            logger.info(f"–†–µ—Ñ–µ—Ä–∞–ª –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}, –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ: {referral.reward_amount}")
            
            # –£–≤–µ–¥–æ–º–ª—è–µ–º —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è
            # TODO: –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä—É
            
            return True
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª–∞: {e}")
    
    return False 